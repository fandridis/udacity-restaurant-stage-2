let staticCacheName="restaurant-reviews-v1",imageCache="restaurant-reviews-gcache-v1",allCaches=[staticCacheName,imageCache];const urlsToCache=["./index.html","./restaurant.html","./manifest.json","./sw.js","./css/main.css","./img/1.webp","./img/2.webp","./img/3.webp","./img/4.webp","./img/5.webp","./img/6.webp","./img/7.webp","./img/8.webp","./img/9.webp","./img/10.webp","./img/icon128.png","./img/icon512.png","./js/dbhelper.js","./js/main.js","./js/restaurant_info.js","./js/idb.js"];self.addEventListener("install",e=>{e.waitUntil(caches.open(staticCacheName).then(e=>e.addAll(urlsToCache)))}),self.addEventListener("fetch",e=>{e.respondWith(caches.match(e.request).then(t=>{if(t)return t;let s=e.request.clone();return fetch(s).then(t=>{if(!t||200!==t.status||"basic"!==t.type)return t;let s=t.clone();return caches.open(staticCacheName).then(t=>{t.put(e.request,s)}),t})}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.filter(e=>e.startsWith("restaurant-reviews-")&&!allCaches.includes(e)).map(e=>caches.delete(e)))))}),self.addEventListener("message",e=>{"skipWaiting"==e.data.action&&self.skipWaiting()});